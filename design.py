# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'design.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QMessageBox, QTableWidgetItem
from networkx.algorithms.shortest_paths import weighted
import GraphReader

class Ui_Algorithms(object):
    def setupUi(self, Algorithms):
        Algorithms.setObjectName("Algorithms")
        Algorithms.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(Algorithms)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, -30, 801, 601))
        self.tabWidget.setObjectName("tabWidget")
        self.BrowseFile = QtWidgets.QWidget()
        self.BrowseFile.setObjectName("BrowseFile")
        self.label = QtWidgets.QLabel(self.BrowseFile)
        self.label.setGeometry(QtCore.QRect(120, 40, 551, 111))
        self.label.setStyleSheet("font: italic 36pt \"Monotype Corsiva\";")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.BrowseFile)
        self.label_2.setGeometry(QtCore.QRect(220, 150, 381, 41))
        self.label_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_2.setStyleSheet("font: 12pt \"MS Shell Dlg 2\";")
        self.label_2.setObjectName("label_2")
        self.filename = QtWidgets.QLineEdit(self.BrowseFile)
        self.filename.setGeometry(QtCore.QRect(110, 280, 361, 21))
        self.filename.setObjectName("filename")
        self.browseFile = QtWidgets.QPushButton(self.BrowseFile)
        self.browseFile.setGeometry(QtCore.QRect(510, 280, 141, 23))
        self.browseFile.setObjectName("browseFile")
        self.label_3 = QtWidgets.QLabel(self.BrowseFile)
        self.label_3.setGeometry(QtCore.QRect(110, 250, 231, 31))
        self.label_3.setStyleSheet("font: 11pt \"MS Shell Dlg 2\";")
        self.label_3.setObjectName("label_3")
        self.MovetoAlgo = QtWidgets.QPushButton(self.BrowseFile)
        self.MovetoAlgo.setGeometry(QtCore.QRect(330, 390, 101, 31))
        self.MovetoAlgo.setObjectName("MovetoAlgo")
        self.tabWidget.addTab(self.BrowseFile, "")
        self.ChooseAlgo = QtWidgets.QWidget()
        self.ChooseAlgo.setObjectName("ChooseAlgo")
        self.label_4 = QtWidgets.QLabel(self.ChooseAlgo)
        self.label_4.setGeometry(QtCore.QRect(280, 260, 231, 31))
        self.label_4.setStyleSheet("font: 12pt \"MS Shell Dlg 2\";")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.ChooseAlgo)
        self.label_5.setGeometry(QtCore.QRect(120, 40, 551, 111))
        self.label_5.setStyleSheet("font: italic 36pt \"Monotype Corsiva\";")
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.ChooseAlgo)
        self.label_6.setGeometry(QtCore.QRect(220, 150, 381, 41))
        self.label_6.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_6.setStyleSheet("font: 12pt \"MS Shell Dlg 2\";")
        self.label_6.setObjectName("label_6")
        self.Prims = QtWidgets.QPushButton(self.ChooseAlgo)
        self.Prims.setGeometry(QtCore.QRect(170, 300, 161, 61))
        self.Prims.setObjectName("Prims")
        self.Kruskal = QtWidgets.QPushButton(self.ChooseAlgo)
        self.Kruskal.setGeometry(QtCore.QRect(460, 300, 161, 61))
        self.Kruskal.setObjectName("Kruskal")
        self.Dijkstra = QtWidgets.QPushButton(self.ChooseAlgo)
        self.Dijkstra.setGeometry(QtCore.QRect(170, 370, 161, 61))
        self.Dijkstra.setObjectName("Dijkstra")
        self.Warshall = QtWidgets.QPushButton(self.ChooseAlgo)
        self.Warshall.setGeometry(QtCore.QRect(170, 440, 161, 61))
        self.Warshall.setObjectName("Warshall")
        self.Boruvka = QtWidgets.QPushButton(self.ChooseAlgo)
        self.Boruvka.setGeometry(QtCore.QRect(310, 510, 161, 61))
        self.Boruvka.setObjectName("Boruvka")
        self.Cluster = QtWidgets.QPushButton(self.ChooseAlgo)
        self.Cluster.setGeometry(QtCore.QRect(460, 440, 161, 61))
        self.Cluster.setObjectName("Cluster")
        self.Bellman = QtWidgets.QPushButton(self.ChooseAlgo)
        self.Bellman.setGeometry(QtCore.QRect(460, 370, 161, 61))
        self.Bellman.setObjectName("Bellman")
        self.DirNode = QtWidgets.QLabel(self.ChooseAlgo)
        self.DirNode.setGeometry(QtCore.QRect(40, 180, 381, 21))
        self.DirNode.setStyleSheet("font: 12pt \"MS Shell Dlg 2\";")
        self.DirNode.setObjectName("DirNode")
        self.DirNode_2 = QtWidgets.QLabel(self.ChooseAlgo)
        self.DirNode_2.setGeometry(QtCore.QRect(40, 210, 381, 21))
        self.DirNode_2.setStyleSheet("font: 12pt \"MS Shell Dlg 2\";")
        self.DirNode_2.setObjectName("DirNode_2")
        self.BacktoMainPage = QtWidgets.QPushButton(self.ChooseAlgo)
        self.BacktoMainPage.setGeometry(QtCore.QRect(0, 10, 75, 23))
        self.BacktoMainPage.setObjectName("BacktoMainPage")
        self.tabWidget.addTab(self.ChooseAlgo, "")
        self.Result = QtWidgets.QWidget()
        self.Result.setObjectName("Result")
        self.Resultimage = QtWidgets.QLabel(self.Result)
        self.Resultimage.setGeometry(QtCore.QRect(20, 130, 320, 240))
        self.Resultimage.setScaledContents(True)
        self.Resultimage.setObjectName("Resultimage")
        self.label_7 = QtWidgets.QLabel(self.Result)
        self.label_7.setGeometry(QtCore.QRect(60, 410, 211, 41))
        self.label_7.setStyleSheet("font: 12pt \"MS Shell Dlg 2\";\n"
"")
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.Result)
        self.label_8.setGeometry(QtCore.QRect(500, 410, 221, 41))
        self.label_8.setStyleSheet("font: 12pt \"MS Shell Dlg 2\";\n"
"")
        self.label_8.setObjectName("label_8")
        self.Resultimage_2 = QtWidgets.QLabel(self.Result)
        self.Resultimage_2.setGeometry(QtCore.QRect(420, 130, 320, 240))
        self.Resultimage_2.setScaledContents(True)
        self.Resultimage_2.setObjectName("Resultimage_2")
        self.ConvertAfterBefore = QtWidgets.QPushButton(self.Result)
        self.ConvertAfterBefore.setGeometry(QtCore.QRect(330, 470, 101, 31))
        self.ConvertAfterBefore.setObjectName("ConvertAfterBefore")
        self.ShowTable = QtWidgets.QPushButton(self.Result)
        self.ShowTable.setGeometry(QtCore.QRect(640, 520, 111, 31))
        self.ShowTable.setObjectName("ShowTable")
        self.ResultstoAlgo = QtWidgets.QPushButton(self.Result)
        self.ResultstoAlgo.setGeometry(QtCore.QRect(30, 520, 111, 31))
        self.ResultstoAlgo.setObjectName("ResultstoAlgo")
        self.label_10 = QtWidgets.QLabel(self.Result)
        self.label_10.setGeometry(QtCore.QRect(270, 20, 281, 51))
        self.label_10.setStyleSheet("font: italic 36pt \"Monotype Corsiva\";")
        self.label_10.setObjectName("label_10")
        self.tabWidget.addTab(self.Result, "")
        self.TableView = QtWidgets.QWidget()
        self.TableView.setObjectName("TableView")
        self.label_9 = QtWidgets.QLabel(self.TableView)
        self.label_9.setGeometry(QtCore.QRect(270, 20, 271, 41))
        self.label_9.setStyleSheet("font: italic 36pt \"Monotype Corsiva\";")
        self.label_9.setObjectName("label_9")
        self.TableName = QtWidgets.QLabel(self.TableView)
        self.TableName.setGeometry(QtCore.QRect(40, 540, 111, 31))
        self.TableName.setObjectName("TableName")
        self.BacktoGraph = QtWidgets.QPushButton(self.TableView)
        self.BacktoGraph.setGeometry(QtCore.QRect(674, 540, 111, 31))
        self.BacktoGraph.setObjectName("BacktoGraph")
        self.tableWidget = QtWidgets.QTableWidget(self.TableView)
        self.tableWidget.setGeometry(QtCore.QRect(10, 80, 781, 451))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.tabWidget.addTab(self.TableView, "")
        Algorithms.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(Algorithms)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        Algorithms.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(Algorithms)
        self.statusbar.setObjectName("statusbar")
        Algorithms.setStatusBar(self.statusbar)

        self.retranslateUi(Algorithms)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(Algorithms)

    def retranslateUi(self, Algorithms):
        _translate = QtCore.QCoreApplication.translate
        Algorithms.setWindowTitle(_translate("Algorithms", "Algorithms & Designs"))
        self.label.setText(_translate("Algorithms", "Fortuna\n"
"Design Analysis & Algorithms"))
        self.label_2.setText(_translate("Algorithms", "Run any algorithm on any number of nodes and files"))
        self.browseFile.setText(_translate("Algorithms", "Browse"))
        self.label_3.setText(_translate("Algorithms", "Browse or enter the name of file :"))
        self.MovetoAlgo.setText(_translate("Algorithms", "Next"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.BrowseFile), _translate("Algorithms", "Browse File"))
        self.label_4.setText(_translate("Algorithms", "Press the Algorithms to generate the results"))
        self.label_5.setText(_translate("Algorithms", "Fortuna\n"
"Design Analysis & Algorithms"))
        self.label_6.setText(_translate("Algorithms", "Run any algorithm on any number of nodes and files"))
        self.Prims.setText(_translate("Algorithms", "Prim\'s Algorithm"))
        self.Kruskal.setText(_translate("Algorithms", "Kruskal\'s Algorithm"))
        self.Dijkstra.setText(_translate("Algorithms", "Dijkstra\'s Algorithm"))
        self.Warshall.setText(_translate("Algorithms", "Floyd Warshall"))
        self.Boruvka.setText(_translate("Algorithms", "Boruvka\'s Algorithm"))
        self.Cluster.setText(_translate("Algorithms", "Clustering Coefficients"))
        self.Bellman.setText(_translate("Algorithms", "Bellman Ford"))
        self.DirNode.setText(_translate("Algorithms", "directed graph"))
        self.DirNode_2.setText(_translate("Algorithms", "Undirected graph"))
        self.BacktoMainPage.setText(_translate("Algorithms", "Back"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.ChooseAlgo), _translate("Algorithms", "Choose Algorithms"))
        self.Resultimage.setText(_translate("Algorithms", "TextLabel"))
        self.label_7.setText(_translate("Algorithms", "Resulted Graph (No weights)"))
        self.label_8.setText(_translate("Algorithms", "Resulted Graph (with weights)"))
        self.Resultimage_2.setText(_translate("Algorithms", "TextLabel"))
        self.ConvertAfterBefore.setText(_translate("Algorithms", "Show Before"))
        self.ShowTable.setText(_translate("Algorithms", "Show Table"))
        self.ResultstoAlgo.setText(_translate("Algorithms", "Back to Algorithms"))
        self.label_10.setText(_translate("Algorithms", "Fortuna Results"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Result), _translate("Algorithms", "Result"))
        self.label_9.setText(_translate("Algorithms", "Fortuna Tables"))
        self.TableName.setText(_translate("Algorithms", "Table Name"))
        self.BacktoGraph.setText(_translate("Algorithms", "Back to Graph"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.TableView), _translate("Algorithms", "Page"))

    def SelectFile(self):
        Location = "E:\Algorithms\Algorithms-Design"
        global fname
        fname = QFileDialog.getOpenFileName(None, "Select File", Location, "Text files (*.txt)")
        self.filename.setText(fname[0])

    def MovetoAlgoPage(self):
        # self.tabWidget.setCurrentIndex(1)
        # GraphReader.readInputFile(fname[0])
        name = self.filename.text()
        if name != '':
            GraphReader.readInputFile(name)
            self.DirNode.setText("Total Nodes in Directed Graph : " + str(GraphReader.di_verts))
            self.DirNode_2.setText("Total Nodes in UnDirected Graph : " + str(GraphReader.verts))
            self.tabWidget.setCurrentIndex(1)
        else:
            QMessageBox.about(None, "No Path Selected", "Please Select a valid location")

    def BacktoFortuna(self):
        self.tabWidget.setCurrentIndex(0)
        self.filename.setText("")    

    def Backtoalgo(self):
        self.tabWidget.setCurrentIndex(1)

    def MovetoAfterBeforeVariableChange(self, value):
        global algochecker
        algochecker = value

    def MovetoAfterBeforeGraph(self):
        if algochecker == 1:
                if self.ConvertAfterBefore.text() == "Show Before":
                        self.ConvertAfterBefore.setText("Show After")
                        self.label_7.setText("Original Graph (No Weights)")
                        self.label_8.setText("Original Graph (with Weights)")
                        self.Resultimage.setPixmap(QtGui.QPixmap("Graph.png"))
                        self.Resultimage.setScaledContents(True)
                        self.Resultimage_2.setPixmap(QtGui.QPixmap("Graph_with_Weights.png"))
                        self.Resultimage_2.setScaledContents(True)
                else:
                        self.ConvertAfterBefore.setText("Show Before")
                        self.label_7.setText("Resulted Graph (No Weights)")
                        self.label_8.setText("Resulted Graph (with Weights)")
                        self.Resultimage.setPixmap(QtGui.QPixmap("PrimMST.png"))
                        self.Resultimage.setScaledContents(True)
                        self.Resultimage_2.setPixmap(QtGui.QPixmap("PrimMST_with_Weights.png"))
                        self.Resultimage_2.setScaledContents(True)
        
        elif algochecker == 2:
                if self.ConvertAfterBefore.text() == "Show Before":
                        self.ConvertAfterBefore.setText("Show After")
                        self.label_7.setText("Original Graph (No Weights)")
                        self.label_8.setText("Original Graph (with Weights)")
                        self.Resultimage.setPixmap(QtGui.QPixmap("Graph.png"))
                        self.Resultimage.setScaledContents(True)
                        self.Resultimage_2.setPixmap(QtGui.QPixmap("Graph_with_Weights.png"))
                        self.Resultimage_2.setScaledContents(True)
                else:
                        self.ConvertAfterBefore.setText("Show Before")
                        self.label_7.setText("Resulted Graph (No Weights)")
                        self.label_8.setText("Resulted Graph (with Weights)")
                        self.Resultimage.setPixmap(QtGui.QPixmap("KruskalMST.png"))
                        self.Resultimage.setScaledContents(True)
                        self.Resultimage_2.setPixmap(QtGui.QPixmap("KruskalMST_with_Weights.png"))
                        self.Resultimage_2.setScaledContents(True)

    def doPrims(self):
        weight = GraphReader.PrimAlgo()
        self.MovetoAfterBeforeVariableChange(1)
        self.tabWidget.setCurrentIndex(2)
        self.Resultimage.setPixmap(QtGui.QPixmap("PrimMST.png"))
        self.Resultimage.setScaledContents(True)
        self.Resultimage_2.setPixmap(QtGui.QPixmap("PrimMST_with_Weights.png"))
        self.Resultimage_2.setScaledContents(True)
        self.ShowTable.hide()

    def doKruskals(self):
        weight = GraphReader.KruskalAlgo()
        self.MovetoAfterBeforeVariableChange(2)
        self.tabWidget.setCurrentIndex(2)
        self.Resultimage.setPixmap(QtGui.QPixmap("KruskalMST.png"))
        self.Resultimage.setScaledContents(True)
        self.Resultimage_2.setPixmap(QtGui.QPixmap("KruskalMST_with_Weights.png"))
        self.Resultimage_2.setScaledContents(True)
        self.ShowTable.hide()

    def doFloyyd(self):
        result = GraphReader.FloydWarshallAlgo()
        self.tableWidget.setColumnCount(len(result[0]))
        self.tableWidget.setRowCount(len(result))

        for row in range(len(result)):
            for column in range(len(result[0])):
                self.tableWidget.setItem(row, column, QTableWidgetItem((str(round(result[row][column], 3)))))

        self.Resultimage.setPixmap(QtGui.QPixmap("FloydWarshall_Before.png"))
        self.Resultimage.setScaledContents(True)
        self.Resultimage_2.setPixmap(QtGui.QPixmap("FloydWarshall_After.png"))
        self.Resultimage_2.setScaledContents(True)
        self.label_7.setText("Floyd Warshall (Before)")
        self.label_8.setText("Floyd Warshall (After)")
        self.tabWidget.setCurrentIndex(2)
        self.ConvertAfterBefore.hide()
        self.ShowTable.show()
        self.TableName.setText("Floyd Warshall Values")

    def doClustering(self):
        result = GraphReader.ClusteringCoefficientAlgo()
        self.tableWidget.setColumnCount(1)
        self.tableWidget.setRowCount(GraphReader.verts)

        for row in range(GraphReader.verts):
            self.tableWidget.setItem(row, 0, QTableWidgetItem(str(round(result[row], 3))))

        self.Resultimage.setPixmap(QtGui.QPixmap("Graph.png"))
        self.Resultimage.setScaledContents(True)
        self.Resultimage_2.setPixmap(QtGui.QPixmap("ClusteringCoefficient.png"))
        self.Resultimage_2.setScaledContents(True)
        self.label_7.setText("Original Graph (no Weights)")
        self.label_8.setText("Local Clustering Co-efficients")
        self.tabWidget.setCurrentIndex(2)
        self.ConvertAfterBefore.hide()
        self.ShowTable.show()
        self.TableName.setText("Clustering Co-efficients")


    def showtablefunc(self):
        self.tabWidget.setCurrentIndex(3)

    def backtographfunc(self):
        self.tabWidget.setCurrentIndex(2)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Algorithms = QtWidgets.QMainWindow()
    ui = Ui_Algorithms()
    ui.setupUi(Algorithms)
    Algorithms.show()
    ui.tabWidget.setCurrentIndex(0)

    ui.browseFile.clicked.connect(ui.SelectFile)
    ui.MovetoAlgo.clicked.connect(ui.MovetoAlgoPage)
    ui.BacktoMainPage.clicked.connect(ui.BacktoFortuna)
    ui.ConvertAfterBefore.clicked.connect(ui.MovetoAfterBeforeGraph)
    ui.ResultstoAlgo.clicked.connect(ui.Backtoalgo)
    ui.BacktoGraph.clicked.connect(ui.backtographfunc)
    ui.ShowTable.clicked.connect(ui.showtablefunc)
    ui.Prims.clicked.connect(ui.doPrims)
    ui.Kruskal.clicked.connect(ui.doKruskals)
    ui.Warshall.clicked.connect(ui.doFloyyd)
    ui.Cluster.clicked.connect(ui.doClustering)

    sys.exit(app.exec_())